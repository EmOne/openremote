# OpenRemote v3
#
# Profile that runs the vanilla stack on https://localhost using a self-signed SSL certificate,
# with username 'admin' and password 'secret'. There is no map data available in the vanilla
# system so the map tile server will not function. Persistent data is stored in a docker
# volume called postgresql-data between restarts, simply delete this volume to reset the
# system to an empty state.
#
# Please see profile/deploy.yml for configuration details for each service.
#
version: '3.7'

networks:
  public:
    driver: overlay
    driver_opts:
      encrypted: 'true'
  private:
    driver: overlay
    driver_opts:
      encrypted: 'true'
    attachable: false

services:

  proxy:
    image: openremote/proxy:${DATE_TAG:-latest}
    networks:
      - public
      - private
    depends_on:
      - manager
    healthcheck:
        interval: 3s
        timeout: 3s
        start_period: 2s
        retries: 3
        test: ["CMD", "curl", "--fail", "--silent", "http://localhost:80"]
    ports:
      - "80:80"
      - "443:443"
      - "8883:8883"

    deploy:
      replicas: 1
      restart_policy:
        delay: 10s
        window: 30s
      update_config:
        failure_action: rollback
        order: start-first
        delay: 30m

  manager:
    image: openremote/manager:${DATE_TAG:-latest}
    networks:
      - private
    depends_on:
      - keycloak
    healthcheck:
        interval: 3s
        timeout: 3s
        start_period: 2s
        retries: 120
        test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8080"]
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
        order: start-first
        delay: 10s

  keycloak:
    image: openremote/keycloak:${DATE_TAG:-latest}
    networks:
      - public
      - private
    depends_on:
      - postgresql
    healthcheck:
        test: ["CMD", "curl", "--fail", "--silent", "http://localhost:8080/auth"]
        interval: 3s
        timeout: 3s
        start_period: 60s
        retries: 30
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
        order: start-first
        delay: 10m

  postgresql:
    image: openremote/postgresql:${DATE_TAG:-latest}
    networks:
      - private
    healthcheck:
        interval: 3s
        timeout: 3s
        start_period: 2s
        retries: 30
        test: ["CMD", "gosu", "postgres", "pg_isready"]
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
        order: start-first
        delay: 20m

